using System;
using System.Linq;

namespace ArgsProblem.Tests
{
    public class ValidateArguments
    {
        bool isHelp = false;
        bool isCountValid = false;
        bool isNameValid = false;
        public int Validate(string[] args)
        {
            this.ConvertAllToLowerCase(args);
            
            //for(int i=0; i<args.Length; i++)
            //{
            //    Console.WriteLine(args[i]);
            //}
            if(this.CheckForZeroArgs(args))
            {
                return -1;
            }
            else if(!this.CheckForNumberOfArgs(args))
            {
                return -1;
            }
            else if(!this.CheckForArgrumentNames(args))
            {
                return -1;
            }
            this.ValidateArgs(args);
            if(this.isHelp)
            {
                if(args.Length == 1)
                {
                    return 1;
                }
                else if(args.Contains("--count") && args.Contains("--name") && this.isCountValid && this.isNameValid)
                {
                    return 1;
                }
                else if (args.Contains("--name") && this.isNameValid)
                {
                    return 1;
                }
                else if (args.Contains("--count") && this.isCountValid)
                {
                    return 1;
                }
                return -1;
            }
            else if (args.Contains("--count".ToLower()) && args.Contains("--name".ToLower()))
            {
                if(this.isNameValid && this.isCountValid)
                {
                    return 0;
                }
                else
                {
                    return -1;
                }
            }
            else if (args.Contains("--name".ToLower()))
            {
                if(this.isNameValid)
                {
                    return 0;
                }
                else
                {
                    return -1;
                }
            }
            else if (args.Contains("--count".ToLower()))
            {
                if(this.isCountValid)
                {
                    return 0;
                }
            }
            return -1;
        }

        private void ConvertAllToLowerCase(string[]args)
        {
            for(int i=0; i<args.Length; i++)
            {
                args[i] = args[i].ToLower();
            }
        }

        private bool CheckForZeroArgs(string[]args)
        {
            return args.Length == 0;
        }

        private bool CheckForNumberOfArgs(string[]args)
        {
            return args.Length == 1 || args.Length == 3 || args.Length == 2 || args.Length == 4 || args.Length == 5;
        }

        private bool CheckForArgrumentNames(string[] args)
        {
            if(args.Length == 1)
            {
                if (args[0] == "--help")
                {
                    
                    this.isHelp = true;
                    return true;
                }
            }
            else if(args.Length == 2)
            {
                if(args.Contains("--count") || args.Contains("--name"))
                {
                    return true;
                }
            }
            else if (args.Length == 4)
            {
                if(args.Contains("--count") && args.Contains("--name"))
                {
                    return true;
                }
            }
            else if (args.Length == 3)
            {
                if (args.Contains("--count") || args.Contains("--name"))
                {
                    this.isHelp = true;
                    return true;
                }
            }
            else if (args.Length == 5)
            {
                if(args.Contains("--count") && args.Contains("--name") && args.Contains("--help"))
                {
                    this.isHelp = true;
                    return true;
                }
            }
            return false;
        }

        private void ValidateArgs(string []args)
        {
            if (args.Length == 2 || args.Length == 3 || args.Length == 4 || args.Length == 5)
            {
                if (args.Contains("--count"))
                {
                    int index = Array.IndexOf(args, "--count");
                    int count = -1;
                    try
                    {
                        count = int.Parse(args[index + 1]);
                    }
                    catch(Exception ex)
                    {
                        this.isCountValid = false;
                        return;
                    }
                    
                    if (count >= 10 && count <= 100)
                    {
                        this.isCountValid = true;
                    }
                    else
                    {
                        this.isCountValid = false;
                    }
                }
                if (args.Contains("--name".ToLower()))
                {
                    int index = Array.IndexOf(args, "--name");
                    string name = args[index + 1];
                    if (name.Length >= 3 && name.Length <= 10)
                    {
                         
                        this.isNameValid = true;
                    }
                    else
                    {
                        
                        this.isNameValid = false;
                    }
                }
            }
        }
    }
}